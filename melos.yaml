name: FlutterGen

packages:
  - packages/**
  - example/*

ide:
  intellij: true
  vscode: true

scripts:
  pub:upgrade:
    run: |
      melos exec --flutter -- flutter pub upgrade &&
      melos exec --no-flutter -- dart pub upgrade

  pub:get:
    run: |
      melos exec --flutter -- flutter pub get &&
      melos exec --no-flutter -- dart pub get

  analyze: melos exec -- dart analyze .

  format: bash ./scripts/dartfmt.sh

  gen:build_runner:
    run: |
      melos exec -- dart pub run build_runner build --delete-conflicting-outputs
    select-package:
      ignore: example
      depends-on: 'build_runner'

  build:
    run: |
      melos exec -- flutter build apk
    select-package:
      scope: example

  example:command:
    run: |
      melos exec \
      -- dart ../packages/command/bin/flutter_gen_command.dart --config pubspec.yaml
    select-package:
      scope: example

  example:build_runner:
    run: |
      melos exec \
      -- exec flutter pub run build_runner build --delete-conflicting-outputs
    select-package:
      scope: example

  unit:test:
    run: melos exec -- dart run test
    select-package:
      dir-exists: test

  coverage:
    run: |
      bash ./scripts/coverage.sh packages/core
      bash ./scripts/codecov.sh ${CODECOV_TOKEN}
