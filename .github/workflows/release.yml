name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: macos-latest
            artifact_prefix: macos
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            artifact_prefix: linux
            target: x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3
      - uses: FlutterGen/flutter_gen/.github/workflows/setup_sdks.yml@main

      - name: Running build
        run: |
          cd packages/command/
          mkdir -p bin/${{ matrix.target }}
          dart compile exe bin/flutter_gen_command.dart -o bin/${{ matrix.target }}/fluttergen

      - name: Packaging final binary
        shell: bash
        run: |
          cd packages/command/bin/${{ matrix.target }}
          tar czvf fluttergen-${{ matrix.artifact_prefix }}.tar.gz fluttergen
          shasum -a 256 fluttergen-${{ matrix.artifact_prefix }}.tar.gz > fluttergen-${{ matrix.artifact_prefix }}.sha256

      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packages/command/bin/${{ matrix.target }}/fluttergen-${{ matrix.artifact_prefix }}.tar.gz
            packages/command/bin/${{ matrix.target }}/fluttergen-${{ matrix.artifact_prefix }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: sha256
          path: packages/command/bin/${{ matrix.target }}/fluttergen-${{ matrix.artifact_prefix }}.sha256

  update-tap:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sha256

      - id: version
        run: echo "::set-output name=version::${GITHUB_REF##*/}"

      - id: checksum
        shell: bash
        run: |
          echo ::set-output name=sha256_linux::$(cat fluttergen-linux.sha256 | awk '{ print $1 }')
          echo ::set-output name=sha256_macos::$(cat fluttergen-macos.sha256 | awk '{ print $1 }')
      - uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT_FLUTTERGEN }}
          repository: FlutterGen/homebrew-tap
          event-type: update-tap
          client-payload: '{ "sha256_linux": "${{ steps.checksum.outputs.sha256_linux }}", "sha256_macos": "${{ steps.checksum.outputs.sha256_macos }}", "version": "${{ steps.version.outputs.version }}" }'

  publish-pub-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: FlutterGen/flutter_gen/.github/workflows/setup_sdks.yml@main

      - name: Setup credentials
        run: |
          mkdir -p ~/.pub-cache
          cat <<EOF > ~/.pub-cache/credentials.json
          {
            "accessToken":"${{ secrets.CREDENTIALS_ACCESS_TOKEN }}",
            "refreshToken":"${{ secrets.CREDENTIALS_REFRESH_TOKEN }}",
            "idToken":"${{ secrets.CREDENTIALS_ID_TOKEN }}",
            "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
            "scopes": [ "openid", "https://www.googleapis.com/auth/userinfo.email" ],
            "expiration": 1664440281637
          }
          EOF

      - name: Publish to pub.dev
        run: |
          melos publish | echo y
          melos publish --no-dry-run | echo y
