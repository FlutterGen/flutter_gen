name: Build

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Run on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: wasabeef/import-asdf-tool-versions-action@v1.0.1
        id: asdf
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.asdf.outputs.flutter }}
          channel: stable
          cache: true
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ steps.asdf.outputs.dart }}

      - name: Set environment
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Set environment
        if: startsWith(matrix.os, 'windows')
        run: echo "%LOCALAPPDATA%\Pub\Cache\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Get dependencies for macos and ubuntu
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: |
          dart pub global activate melos
          melos bootstrap

      - name: Get dependencies for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          dart pub global activate melos
          # FIXME: CI randomly fail
          melos exec -c 1 -- flutter pub get
          melos bootstrap

      - name: Run tests for our dart project.
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          melos test

      - name: Run coverage
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          melos coverage

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/core/coverage.lcov

      - name: Generate example
        run: |
          melos gen:example:command
          melos gen:example:build_runner

      - name: Check for any formatting and statically analyze the code.
        run: |
          melos format
          melos analyze
