name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: macos-latest
            artifact_prefix: macos
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            artifact_prefix: linux
            target: x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.5.0'
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '2.14.1'

      - name: Running build for macos
        if: matrix.os == 'macos-latest'
        run: |
          cd packages/command/
          dart pub get
          mkdir -p bin/${{ matrix.target }}
          dart2native bin/flutter_gen_command.dart -o bin/${{ matrix.target }}/fluttergen

      - name: Running build for ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd packages/command/
          /usr/lib/dart/bin/pub get
          mkdir -p bin/${{ matrix.target }}
          /usr/lib/dart/bin/dart2native bin/flutter_gen_command.dart -o bin/${{ matrix.target }}/fluttergen

      - name: Packaging final binary
        shell: bash
        run: |
          cd packages/command/bin/${{ matrix.target }}
          tar czvf fluttergen-${{ matrix.artifact_prefix }}.tar.gz fluttergen
          shasum -a 256 fluttergen-${{ matrix.artifact_prefix }}.tar.gz > fluttergen-${{ matrix.artifact_prefix }}.sha256

      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packages/command/bin/${{ matrix.target }}/fluttergen-${{ matrix.artifact_prefix }}.tar.gz
            packages/command/bin/${{ matrix.target }}/fluttergen-${{ matrix.artifact_prefix }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


#  publish:
#    name: Publishing
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checking out sources
#        uses: actions/checkout@v2
#
#      - name: Publish to pub.dev
#        uses: sakebook/actions-flutter-pub-publisher@v1.3.1
#        with:
#          credential: ${{ secrets.CREDENTIAL_JSON }}
#          flutter_package: false
#          skip_test: true
#          dry_run: false

