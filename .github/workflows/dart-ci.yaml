name: Dart CI

on:
  pull_request: { }
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Run on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.5.3'
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '2.14.4'

      - name: Set environment
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Set environment
        if: startsWith(matrix.os, 'windows')
        run: echo "%LOCALAPPDATA%\Pub\Cache\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Get dependencies for macos and ubuntu
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        run: |
          dart pub global activate melos
          melos run pub:get
    
      - name: Get dependencies for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          dart pub global activate melos 1.0.0-dev.3
          melos run pub:get

      - name: Run tests for our dart project.
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          melos run unit:test

      - name: Run coverage
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          melos run coverage

      - name: Generate example
        run: |
          melos run example:command
          melos run example:build_runner

      - name: Check for any formatting and statically analyze the code.
        run: |
          melos run format
          melos run analyze
